select(id, name, popularity)
write_feather(bandas_sample, "data/muestra_bandas.feather")
datos <- list()
i <- 1 # iterador
# Para cada banda
for (id in bandas_sample$id) {
# Descargar discografía completa
datos[[i]] <-  get_artist_audio_features(id, include_groups = "album") #<<
i <- i + 1
print(i)
}
datos <- list()
i <- 1 # iterador
# Para cada banda
for (id in bandas_sample$id) {
# Descargar discografía completa
out <- tryCatch(
{
get_artist_audio_features(id, include_groups = "album")
},
error=function(cond) {
message(paste("No albums found with artist_id", id))
return(NA)
}
)
datos[[i]] <-  out
i <- i + 1
print(i)
}
set.seed(123)
bandas_sample <-  bandas_rock_df %>%
sample_n(150) %>%
select(id, name, popularity)
write_feather(bandas_sample, "data/muestra_bandas.feather")
datos <- list()
i <- 1 # iterador
# Para cada banda
for (id in bandas_sample$id) {
# Descargar discografía completa
out <- tryCatch(
{
get_artist_audio_features(id, include_groups = "album")
},
error=function(cond) {
message(paste("No albums found with artist_id", id))
return(NA)
}
)
datos[[i]] <-  out
i <- i + 1
print(i)
}
27052 / 60 / 60
library(spotifyr)
#Crear token a partir de las credenciales
access_token <- get_spotify_access_token(client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),
client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"))
datos <- list()
i <- 1 # iterador
# Para cada banda
for (id in bandas_sample$id) {
# Descargar discografía completa
out <- tryCatch(
{
get_artist_audio_features(id, include_groups = "album")
},
error=function(cond) {
message(paste("No albums found with artist_id", id))
return(NA)
}
)
datos[[i]] <-  out
i <- i + 1
print(i)
}
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.retina=3,
out.width = "70%",
cache = FALSE,
echo = T,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
options(scipen = 999)
library(spotifyr)
#Crear token a partir de las credenciales
access_token <- get_spotify_access_token(client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),
client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"))
bandas_sample <-  bandas_rock_df %>%
sample_n(150) %>%
select(id, name, popularity)
library(feather)
library(tidyverse)
bandas_sample <-  bandas_rock_df %>%
sample_n(150) %>%
select(id, name, popularity)
write_feather(bandas_sample, "data/muestra_bandas.feather")
datos <- list()
i <- 1 # iterador
# Para cada banda
for (id in bandas_sample$id) {
# Descargar discografía completa
out <- tryCatch(
{
get_artist_audio_features(id, include_groups = "album")
},
error=function(cond) {
message(paste("No albums found with artist_id", id))
return(NA)
}
)
datos[[i]] <-  out
i <- i + 1
print(i)
}
!is.na(datos)
final <- datos[!is.na(datos)]
final <- final %>%
bind_rows()
write_csv(final, "data/muestra_mercado_chileno.csv")
bandas_sample <- read_feather("data/muestra_bandas.feather")
bandas_sample
popularity <- bandas_sample %>%
mutate(pop_quintile =  ntile(popularity, 5))
discografia2 <- final %>%
left_join(popularity, by = c("artist_id" = "id") )
discografia2 %>%
filter(is.na(pop_quintile)) %>%
nrow()
bandas_sample <- read_feather("data/muestra_bandas.feather")
discografia <- read_csv("data/muestra_mercado_chileno.csv")
print(nrow(discografia))
n_discos <- discografia %>%
filter(album_release_year > 0 & album_release_year < 2023) %>%
group_by(album_release_year, album_id) %>%
slice(1) %>%
group_by(album_release_year) %>%
summarise(n = n())
n_discos %>%
ggplot(aes(x = album_release_year, n, group = 1)) +
geom_line() +
theme_bw()
discografia_long <-  discografia %>%
filter(album_release_year > 0 ) %>%
group_by(album_release_year) %>%
summarise_at(.vars = c("danceability", "energy", "valence", "tempo", "tempo", "duration_ms"), .funs =  mean) %>%
pivot_longer(cols = -album_release_year, names_to = "var", values_to = "value")
caracteristicas %>%
filter(var %in% c("danceability", "energy", "valence") ) %>%
filter(album_release_year < 2023) %>%
ggplot(aes(x = album_release_year, y = value, group = var, color = var)) +
geom_line() +
theme_bw()
discografia_long <-  discografia %>%
filter(album_release_year > 0 ) %>%
group_by(album_release_year) %>%
summarise_at(.vars = c("danceability", "energy", "valence", "tempo", "tempo", "duration_ms"), .funs =  mean) %>%
pivot_longer(cols = -album_release_year, names_to = "var", values_to = "value")
discografia_long %>%
filter(var %in% c("danceability", "energy", "valence") ) %>%
filter(album_release_year < 2023) %>%
ggplot(aes(x = album_release_year, y = value, group = var, color = var)) +
geom_line() +
theme_bw()
discografia_long %>%
filter(album_release_year < 2023) %>%
filter(var == "tempo") %>%
ggplot(aes(x = album_release_year, y = value, group = 1)) +
geom_line() +
theme_bw()
discografia_long %>%
filter(album_release_year < 2023) %>%
filter(var == "duration_ms") %>%
ggplot(aes(x = album_release_year, y = value, group = 1)) +
geom_line() +
theme_bw()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.retina=3,
out.width = "70%",
cache = FALSE,
echo = T,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
options(scipen = 999)
library(xaringanthemer)
library(tidyverse)
library(DT)
library(kableExtra)
library(plotly)
library(readr)
library(feather)
#style_duo_accent(
#  primary_color = "#1381B0",
#  secondary_color = "#FF961C",
#  inverse_header_color = "#FFFFFF"
#)
xaringanExtra::use_panelset()
library(spotifyr)
#Crear token a partir de las credenciales
access_token <- get_spotify_access_token(client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),
client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"))
bruno_albums <-  get_artist_albums("0du5cEVh5yTK9QJze8zA0C", limit = 50)
bruno_albums %>%
select(album_type, id, name, total_tracks) %>%
datatable(options = list(pageLength = 5, dom = "p") )
jukebox <-  get_album_tracks("58ufpQsJ1DS5kq4hhzQDiI") # id del álbum
jukebox %>%
select(duration_ms, id, name ) %>%
datatable(options = list(pageLength = 5, dom = "p") )
treasure <- get_track_audio_features("55h7vJchibLdUkxdlX3fK7")
treasure %>%
select(-c("id", "uri", "analysis_url", "time_signature", "track_href", "type") ) %>%
datatable(options = list(pageLength = 5, dom = "p") )
foo_fighters <-  get_artist_audio_features("7jy3rLJdDQY21OgRLCZ9sD", include_groups = "album")
shakira <-  get_artist_audio_features("0EmeFodog0BfCgMzAIvKQp", include_groups = "album")
slayer <-  get_artist_audio_features("1IQ2e1buppatiN1bxUVkrk", include_groups = "album")
full <- bind_rows(foo_fighters, shakira, slayer)
plot <- full %>%
group_by(artist_name) %>%
summarise_at(.vars = c("energy", "valence", "danceability"), .funs = mean ) %>%
pivot_longer(cols = c("energy", "valence", "danceability"), names_to = "indicator", values_to = "value") %>%
ggplot(aes(x = artist_name, y = value, fill = indicator )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
theme(axis.title = element_blank())
ggplotly(plot)
bandas_chilenas1 <-  get_genre_artists(genre = "rock", market = "CL", limit = 5, offset = 0) # 0 al 4
bandas_chilenas2 <-  get_genre_artists(genre = "rock", market = "CL", limit = 5, offset = 5) # 5 al 9
final <-  get_genre_artists(genre = "rock", market = "CL", limit = 2, offset = 1) # 999 + 2 = 1001
secuencia <-  seq(0, 950, 50)
bandas_sample <- read_feather("data/muestra_bandas.feather")
discografia <- read_csv("data/muestra_mercado_chileno.csv")
print(nrow(discografia))
n_discos <- discografia %>%
filter(album_release_year > 0 & album_release_year < 2023) %>%
group_by(album_release_year, album_id) %>%
slice(1) %>%
group_by(album_release_year) %>%
summarise(n = n())
n_discos %>%
ggplot(aes(x = album_release_year, n, group = 1)) +
geom_line() +
theme_bw()
discografia_long <-  discografia %>%
filter(album_release_year > 0 ) %>%
group_by(album_release_year) %>%
summarise_at(.vars = c("danceability", "energy", "valence", "tempo", "tempo", "duration_ms"), .funs =  mean) %>%
pivot_longer(cols = -album_release_year, names_to = "var", values_to = "value")
discografia_long %>%
filter(var %in% c("danceability", "energy", "valence") ) %>%
filter(album_release_year < 2023) %>%
ggplot(aes(x = album_release_year, y = value, group = var, color = var)) +
geom_line() +
theme_bw()
discografia_long %>%
filter(album_release_year < 2023) %>%
filter(var == "tempo") %>%
ggplot(aes(x = album_release_year, y = value, group = 1)) +
geom_line() +
theme_bw()
discografia_long %>%
filter(album_release_year < 2023) %>%
filter(var == "duration_ms") %>%
ggplot(aes(x = album_release_year, y = value, group = 1)) +
geom_line() +
theme_bw()
popularity <- bandas_sample %>%
mutate(pop_quintile =  ntile(popularity, 5))
discografia2 <- discografia %>%
left_join(popularity, by = c("artist_id" = "id") )
sum(is.na(discografia2$pop_quintile))
bandas_sample <- read_feather("data/muestra_bandas.feather")
library(xaringanthemer)
library(tidyverse)
library(DT)
library(kableExtra)
library(plotly)
library(readr)
library(feather)
#style_duo_accent(
#  primary_color = "#1381B0",
#  secondary_color = "#FF961C",
#  inverse_header_color = "#FFFFFF"
#)
xaringanExtra::use_panelset()
bandas_sample <- read_feather("data/muestra_bandas.feather")
discografia <- read_csv("data/muestra_mercado_chileno.csv")
print(nrow(discografia))
n_discos <- discografia %>%
filter(album_release_year > 0 & album_release_year < 2023) %>%
group_by(album_release_year, album_id) %>%
slice(1) %>%
group_by(album_release_year) %>%
summarise(n = n())
n_discos %>%
ggplot(aes(x = album_release_year, n, group = 1)) +
geom_line() +
theme_bw()
discografia_long <-  discografia %>%
filter(album_release_year > 0 ) %>%
group_by(album_release_year) %>%
summarise_at(.vars = c("danceability", "energy", "valence", "tempo", "tempo", "duration_ms"), .funs =  mean) %>%
pivot_longer(cols = -album_release_year, names_to = "var", values_to = "value")
discografia_long %>%
filter(var %in% c("danceability", "energy", "valence") ) %>%
filter(album_release_year < 2023) %>%
ggplot(aes(x = album_release_year, y = value, group = var, color = var)) +
geom_line() +
theme_bw()
popularity <- bandas_sample %>%
mutate(pop_quintile =  ntile(popularity, 5))
discografia2 <- discografia %>%
left_join(popularity, by = c("artist_id" = "id") )
sum(is.na(discografia2$pop_quintile))
discografia2 <- discografia %>%
group_by(artist_id) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean ) %>%
ungroup() %>%
left_join(popularity, by = c("artist_id" = "id") )
discografia2
discografia2 %>%
group_by(popularity) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean)
discografia2 <- discografia %>%
group_by(artist_id) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean ) %>%
ungroup() %>%
left_join(popularity %>% select(id, pop_quintile), by = c("artist_id" = "id") )
discografia2 %>%
group_by(pop_quintile) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean)
discografia2 %>%
group_by(pop_quintile) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean) %>%
mutate(duration = duration_ms * 1000)
discografia2 %>%
group_by(pop_quintile) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean) %>%
mutate(duration = duration_ms * 1000 / 60)
discografia2 %>%
group_by(pop_quintile) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean) %>%
mutate(duration = duration_ms / 1000 / 60)
tabla <- discografia2 %>%
group_by(pop_quintile) %>%
summarise_at(c("energy", "danceability", "duration_ms", "valence", "tempo"), mean) %>%
mutate(duration = duration_ms / 1000 / 60)
tabla %>%
ggplot(aes(pop_quintile, danceability)) %>%
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, danceability)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, duration)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, valence)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, tempo)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, energy)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, danceability)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, duration)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, tempo)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, energy)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, danceability)) +
geom_bar(stat = "identity")
tabla %>%
ggplot(aes(pop_quintile, duration)) +
geom_bar(stat = "identity")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.retina=3,
out.width = "70%",
cache = FALSE,
echo = T,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
options(scipen = 999)
library(twitteR)
install.packages("twitteR")
api_key <- "H5lNIrtXtvpANug0GLIq5Ixku"
api_secret <- "MFIKmUiD1WnmzdmbUGyzdHSdVhz2gnmkxyI9l6ltvrnSSHni9H"
access_token <- "1080454016398692352-20F1UGfSG4z8yuh8Xm7JVbQbu7OjhD"
access_token_secret <- "ihnkkTchCrF84WHn86BXwt0t8N84EYCk0aBvob9mLI0um"
library(twitteR)
api_key <- "H5lNIrtXtvpANug0GLIq5Ixku"
api_secret <- "MFIKmUiD1WnmzdmbUGyzdHSdVhz2gnmkxyI9l6ltvrnSSHni9H"
access_token <- "1080454016398692352-20F1UGfSG4z8yuh8Xm7JVbQbu7OjhD"
access_token_secret <- "ihnkkTchCrF84WHn86BXwt0t8N84EYCk0aBvob9mLI0um"
options(httr_oauth_cache=TRUE)
setup_twitter_oauth(consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_token_secret)
mios <- userTimeline("KlausLehmann16", n = 2)
mios
mios <- userTimeline("luisguillermosr", n = 2)
options(httr_oauth_cache=TRUE)
setup_twitter_oauth(consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_token_secret)
mios <- userTimeline("luisguillermosr", n = 2)
install.packages("rtweet")
library(rtweet)
twitter_token <- create_token(
app = "test",
consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_token_secret)
tweets <- search_tweets(q = "inflacion", n = 2)
get_token()
auth_get()
twitter_token <- create_token(
app = "test",
consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_token_secret)
auth_get()
rt <- search_tweets("#DataScience", n = 2, include_rts = FALSE)
rstats_tweets <- search_tweets(q = "#rstats",
n = 10)
x <- rtweet::get_followers("Klauslehmann16")
get_followers
search_tweets
searchTwitter
bearer_token <- "AAAAAAAAAAAAAAAAAAAAAFRG9QAAAAAAWwRBRMwxfTTx4qaL%2BIzgvM9mcVQ%3DRgiIww0m3645Iqz8MuoJiZgagsipKAFAvQbyTDhHBq9hCgFtrm"
require(httr)
bearer_token <- "AAAAAAAAAAAAAAAAAAAAAFRG9QAAAAAAhlQcFaI0I%2Fwgow0MlrSgutRzNdM%3DfeVDJoi79spmMFsOAXVrh3LjvMXdzCcbtptRRilWH3OlE2xft0"
headers <- c(`Authorization` = sprintf('Bearer %s', bearer_token))
headers
params <- list(`user.fields` = 'description')
handle <- 'TwitterDev'
url_handle <-
sprintf('https://api.twitter.com/2/users/by?usernames=%s', handle)
url_handle
response <-
httr::GET(url = url_handle,
httr::add_headers(.headers = headers),
query = params)
obj <- httr::content(res, as = "text")
obj <- httr::content(response, as = "text")
print(obj)
headers = c(
`Authorization` = sprintf('Bearer %s', bearer_token)
)
params = list(
`query` = 'from:twitterdev lang:en',
`max_results` = '10',
`tweet.fields` = 'created_at,lang,context_annotations'
)
response <- httr::GET(url = 'https://api.twitter.com/2/tweets/search/all',
httr::add_headers(.headers=headers), query = params)
fas_body <-
content(
response,
as = 'parsed',
type = 'application/json',
simplifyDataFrame = TRUE
)
View(fas_body$data)
fas_body
devtools::install_github("MaelKubli/RTwitterV2")
library(RTwitterV2)
test <- get_timelines_v2(token = bearer_token, user_id = "14273050", n = 3)
test <- get_timelines_v2(token = bearer_token, user_id = "14273050", n = 1)
test <- get_user_v2(token = bearer_token, user_ids = "959432550400831488,62777265,14273050")
test
query_content <- "from:TwitterDev"
test <- full_archive_search(token = bearer_token,
search_query = query_content,
n = 10)
test <- get_timelines_v2(token = bearer_token, user_id = "14273050", n = 1)
test <- get_user_v2(token = bearer_token, user_ids = "959432550400831488,62777265,14273050")
test
test <- get_user_v2(token = bearer_token, user_ids = "Craig The DJ")
test
test <- get_user_v2(token = bearer_token, user_ids = "213")
test
test <- get_timelines_v2(token = bearer_token, user_id = "14273050", n = 1)
test <- get_user_v2(token = bearer_token, user_ids = "14273050")
test
get_user_v2
test <- get_user_v2(token = bearer_token, user_ids = "225445834")
test
test <- get_user_v2(token = bearer_token, user_ids = "1080454016398692352")
test
test <- get_timelines_v2(token = bearer_token, user_id = "225445834", n = 1)
test <- get_timelines_v2(token = bearer_token, user_id = "225445834", n = 10)
